{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./web-socket.service\";\nimport * as i2 from \"./auth.service\";\nexport class ChatService {\n  get usuario() {\n    return this.authService.usuario;\n  }\n  constructor(wsService, authService) {\n    this.wsService = wsService;\n    this.authService = authService;\n  }\n  sendMessage(mensaje) {\n    const payload = {\n      user: this.usuario.name,\n      mensaje,\n      idSala: '123456789'\n    };\n    this.wsService.emit('mensaje', payload);\n  }\n  getMessages() {\n    return this.wsService.listen('mensaje-nuevo');\n  }\n}\nChatService.ɵfac = function ChatService_Factory(t) {\n  return new (t || ChatService)(i0.ɵɵinject(i1.WebSocketService), i0.ɵɵinject(i2.AuthService));\n};\nChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChatService,\n  factory: ChatService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,WAAW;EAEtB,IAAIC,OAAO;IACT,OAAO,IAAI,CAACC,WAAW,CAACD,OAAO;EACjC;EAGAE,YAAoBC,SAA0B,EAC1BF,WAAwB;IADxB,cAAS,GAATE,SAAS;IACT,gBAAW,GAAXF,WAAW;EAAiB;EAEhDG,WAAW,CAACC,OAAc;IACxB,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAE,IAAI,CAACP,OAAO,CAACQ,IAAI;MACvBH,OAAO;MACPI,MAAM,EAAE;KACT;IAED,IAAI,CAACN,SAAS,CAACO,IAAI,CAAC,SAAS,EAACJ,OAAO,CAAC;EACxC;EAEAK,WAAW;IACT,OAAO,IAAI,CAACR,SAAS,CAACS,MAAM,CAAC,eAAe,CAAC;EAE/C;;AAvBWb,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["ChatService","usuario","authService","constructor","wsService","sendMessage","mensaje","payload","user","name","idSala","emit","getMessages","listen","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Miguel\\Documents\\proyecos\\S6-09-T-Angular\\client\\src\\app\\services\\chat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { WebSocketService } from './web-socket.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n  get usuario(){\r\n    return this.authService.usuario;\r\n  }\r\n\r\n\r\n  constructor(private wsService:WebSocketService,\r\n              private authService: AuthService) { }\r\n\r\n  sendMessage(mensaje:string){\r\n    const payload = {\r\n      user: this.usuario.name,\r\n      mensaje,\r\n      idSala: '123456789'\r\n    }\r\n\r\n    this.wsService.emit('mensaje',payload);\r\n  }\r\n\r\n  getMessages(){\r\n    return this.wsService.listen('mensaje-nuevo');\r\n\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}